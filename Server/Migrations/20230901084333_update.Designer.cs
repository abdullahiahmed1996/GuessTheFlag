// <auto-generated />
using GuessTheFlag.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuessTheFlag.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230901084333_update")]
    partial class update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GuessTheFlag.Shared.Models.CountryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Albania"
                        });
                });

            modelBuilder.Entity("GuessTheFlag.Shared.Models.FlagModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId")
                        .IsUnique();

                    b.ToTable("Flags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            ImgUrl = "Afghanistan.gif"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            ImgUrl = "Albania.gif"
                        });
                });

            modelBuilder.Entity("GuessTheFlag.Shared.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GuessTheFlag.Shared.Models.FlagModel", b =>
                {
                    b.HasOne("GuessTheFlag.Shared.Models.CountryModel", "Country")
                        .WithOne("Flag")
                        .HasForeignKey("GuessTheFlag.Shared.Models.FlagModel", "CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("GuessTheFlag.Shared.Models.CountryModel", b =>
                {
                    b.Navigation("Flag");
                });
#pragma warning restore 612, 618
        }
    }
}
